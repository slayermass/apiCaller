import fs from 'fs';

/**
 * this file includes performance optimizations
 * replacing *let|const* to *var* boosts at the static semantics evaluation
 * replacing *var [a,b]=* to *var {0:a,1:b}=* decreases the length of the generated bytecode and therefore the time execution
 */
const path = 'dist';

fs.readdirSync(path)
  .filter((file) => file.endsWith('.js'))
  .forEach((file) => {
    const fileContent = fs
      .readFileSync(`${path}/${file}`, 'utf8')
      .replaceAll(/\bconst\b|\blet\b/gm, 'var')
      .replaceAll(/(var|,)\[(\w,?)+]=/gm, (sub) =>
        sub.replaceAll(/\[(.+)]=/gm, (_, variablesInsideBrackets) => {
          const str = variablesInsideBrackets.split(',').map((v, index) => `${index}:${v}`);

          return `{${str}}=`;
        }),
      );

    fs.writeFileSync(`${path}/${file}`, fileContent);
  });
